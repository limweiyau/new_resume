/* =============================================================
   CONFIGURATION PANEL – tweak anything below this line
   ============================================================= */

/* ── Ring layout ─────────────────────────────────────────── */
$ring-item-counts : (3, 2, 1);          // badges per ring (add up to 8 rings etc.)
$outer-ring-size  : 28rem;              // diameter of the outer-most ring
$ring-step        : 7rem;               // spacing between rings
$ring-durations   : ();                 // optional explicit list e.g. (40s,36s,…)
$base-duration    : 38s;                // spin period for outer ring when list empty
$duration-step    : 4s;                 // speed-up per inner ring

/* ── “Sun” (centre text) options ─────────────────────────── */
$sun-inner-colour  : #fff6d5;   // hot core tone
$sun-outer-colour  : #ffad35;   // rim tone
$sun-glow-colour   : #ffb84a;   // halo colour
$sun-glow-strength : 0.75;       // 0–1 overall brightness 👈 tweak this!
$sun-pulse-scale   : 1.00;      // how much the glow breathes
$sun-pulse-time    : 6s;        // breathing speed

/* ── Badge (orbiting element) ────────────────────────────── */
$badge-size          : 2rem;
$badge-font-size     : .60rem;
$badge-border-radius : 50%;
$badge-colour        : #ff5ff7;
$badge-glow-strength : 0.8;

/* ── Rings appearance ────────────────────────────────────── */
$ring-colour         : #fbfcc9;
$ring-glow-strength  : 1;
$ring-border-width   : .5px;

/* ── Centre text font / colour ───────────────────────────── */
$centre-font-size   : clamp(.9rem, 3vw, 1.6rem);
$centre-font-weight : 800;
$centre-font-family : "Inter", sans-serif;
$centre-font-colour : #ffffff;

/* =============================================================
   END OF CONFIG – no need to edit below unless you wish to
   ============================================================= */

@use "sass:list";
@use "sass:math";

/* — Derived values — */
$ring-count        : list.length($ring-item-counts) - 1;
$badge-bg          : rgba($badge-colour, .18);
$badge-glow        : rgba($badge-colour, $badge-glow-strength);
$ring-border-col   : rgba($ring-colour, .55);
$ring-glow         : rgba($ring-colour, $ring-glow-strength);

/* --------------------------------------------------
   BASE RESET
-------------------------------------------------- */
* { box-sizing: border-box; }
html, body {
  height: 100%; margin: 0;
  font-family: $centre-font-family;
  background: #060917; color: #e9eef9;
  overflow: hidden;
}
#bgCanvas { position: fixed; inset: 0; z-index: 0; pointer-events: none; }

/* --------------------------------------------------
   HERO
-------------------------------------------------- */
.hero          { display: grid; place-items: center; width: 100%; height: 100%; pointer-events: none; }
.orbit-center  { z-index: 10; }

.name {
  margin: 0; white-space: nowrap;
  position: relative; z-index: 11;
  font-size: $centre-font-size; font-weight: $centre-font-weight; font-family: $centre-font-family; color: $centre-font-colour;
  letter-spacing: .05em;
  /* glowing sun text – scales with $sun-glow-strength */
  text-shadow:
    0 0 6px  rgba($sun-inner-colour, $sun-glow-strength * 0.9),
    0 0 14px rgba($sun-inner-colour, $sun-glow-strength * 0.7),
    0 0 24px rgba($sun-outer-colour, $sun-glow-strength * 0.6),
    0 0 38px rgba($sun-glow-colour,  $sun-glow-strength * 0.8),
    0 0 48px rgba($sun-glow-colour,  $sun-glow-strength * 0.6);
  animation: sunGlowPulse $sun-pulse-time ease-in-out infinite alternate;
}

@keyframes sunGlowPulse {
  from { text-shadow:
           0 0 4px  rgba($sun-inner-colour, $sun-glow-strength * 0.7),
           0 0 10px rgba($sun-inner-colour, $sun-glow-strength * 0.5),
           0 0 18px rgba($sun-outer-colour, $sun-glow-strength * 0.4),
           0 0 28px rgba($sun-glow-colour,  $sun-glow-strength * 0.5),
           0 0 38px rgba($sun-glow-colour,  $sun-glow-strength * 0.3);
         transform: scale(1); }
  to   { text-shadow:
           0 0 8px  rgba($sun-inner-colour, $sun-glow-strength),
           0 0 20px rgba($sun-inner-colour, $sun-glow-strength * 0.9),
           0 0 34px rgba($sun-outer-colour, $sun-glow-strength * 0.8),
           0 0 48px rgba($sun-glow-colour,  $sun-glow-strength * 0.9),
           0 0 64px rgba($sun-glow-colour,  $sun-glow-strength * 0.8);
         transform: scale($sun-pulse-scale); }
}

/* --------------------------------------------------
   BADGES – orbiting planets
-------------------------------------------------- */
.orbit-tag {
  display: flex; align-items: center; justify-content: center;
  width: $badge-size; height: $badge-size;
  font-size: $badge-font-size; font-weight: 600;
  text-transform: uppercase; text-align: center; line-height: 1;
  border-radius: $badge-border-radius;
  background: $badge-bg;
  box-shadow: 0 0 12px $badge-glow;
  animation: counterSpin var(--ring-duration, $base-duration) linear infinite;
  transform: translate(-50%, -50%);
}

/* --------------------------------------------------
   STRUCTURE
-------------------------------------------------- */
.orbit-wrap  { position: relative; width: 0; height: 0; }
.orbit-wrap > li { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); }

%ring {
  list-style: none; border: $ring-border-width solid $ring-border-col; border-radius: 50%;
  position: relative; margin: 0; padding: 0;
  box-shadow: 0 0 14px $ring-glow, 0 0 25px rgba($ring-colour, .35);
}
%anchor { position: absolute; top: 50%; left: 50%; width: 0; height: 0; transform-origin: center; }

/* --------------------------------------------------
   RINGS
-------------------------------------------------- */
@for $i from 0 through $ring-count {
  $radius   : $outer-ring-size - ($i * $ring-step);
  $duration : if(list.length($ring-durations) == $ring-count + 1,
                 list.nth($ring-durations, $i + 1),
                 $base-duration - ($i * $duration-step));
  $children : list.nth($ring-item-counts, $i + 1);

  .ring-#{$i} {
    @extend %ring;
    width: $radius; height: $radius;
    animation: spin $duration linear infinite;
    > li { @extend %anchor; }
    > li > .orbit-tag { --ring-duration: #{$duration}; }
    @for $j from 1 through $children {
      > :nth-child(#{$j}) {
        $deg: math.div(360deg, $children);
        transform: rotate($j * $deg) translate(math.div($radius, 2)) rotate(-$j * $deg);
      }
    }
  }
}

/* --------------------------------------------------
   ANIMATIONS
-------------------------------------------------- */
@keyframes spin        { to { transform: rotate(360deg); } }
@keyframes counterSpin { from { transform: translate(-50%, -50%) rotate(0deg); } to { transform: translate(-50%, -50%) rotate(-360deg); } }

/* --------------------------------------------------
   UTILITY
-------------------------------------------------- */
ul { list-style: none; margin: 0; padding: 0; }